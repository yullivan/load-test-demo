version: "3.8"
services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nextjs-frontend
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app/nextjs-app
    working_dir: /app/nextjs-app
    environment:
      - NODE_ENV=development
      - TZ=Asia/Seoul
    command: bash -c "npm install && npm run dev"
    depends_on:
      - backend

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: springboot-backend
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/app/spring-boot-app
    working_dir: /app/spring-boot-app
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/mydb
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
      - TZ=Asia/Seoul
    command: bash -c "chmod +x ./gradlew && ./gradlew clean build && java -jar build/libs/demo-0.0.1-SNAPSHOT.jar"
    depends_on:
      - db

  db:
    image: postgres:15
    container_name: postgres-db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      TZ: Asia/Seoul
    volumes:
      - ./db/postgres/data:/var/lib/postgresql/data
      - ./db/postgres/init:/docker-entrypoint-initdb.d
    command:
      - "postgres"
      - "-c"
      - "max_connections=100"
      - "-c"
      - "client_encoding=UTF8"
